Settings:
  Output files: "/gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/AhSRK07.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/REF/AhSRK07.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 151
Using parameters --bmax 114 --dcv 1024
  Doing ahead-of-time memory usa    Pass  Passed!  Constructing with these parameters: --bmax 114 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 61.4444 (target: 104)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 101
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 102
Getting block 2 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 44
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 45
Getting block 3 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 66
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 67
Getting block 4 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 51
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 52
Getting block 5 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 58
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 59
Getting block 6 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 67
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 68
Getting block 7 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 55
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 56
Getting block 8 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 75
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 76
Getting block 9 of 9
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  5Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194729 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/AhSRK07.1.bt2
Wrote 156 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenoExiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194665 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/AhSRK14.1.bt2
Wrote 148 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/AhSRK14.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 561
    bwtLen: 562
    sz: 141
    bwtSz: 141
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
     Passed!  Constructing with these parameters: --bmax 242 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples tim  Passed!  Constructing with these parameters: --bmax 164 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space   Passed!  Constructing with these parameters: --bmax 105 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 69.25 (target: 104)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 70
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 71
Getting block 2 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 72
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 73
Getting block 3 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 79
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 80
Getting block 4 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 82
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 83
Getting block 5 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 42
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 43
Getting block 6 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 67
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 68
Getting block 7 of 8
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 61
  (Using difference cover)
  Sorting blExiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194729 bytes to primary EBWT file: /gepv/home2/Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194794 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/CgrSRK10.rev.1.bt2
Wrote 224 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/CgrSRK10.rev.2.bt2
Re-opening _in1 and _in2Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194665 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/AhSRK14.rev.1.bt2
Wrote 148 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_18062018/BWT_RefIndexes/AhSRK14.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 561
    bwtLen: 562
    sz: 141
    bwtSz: 141
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 36
    offsSz: 144
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
otal time for backward call to driver() for mirror index: 00:00:00
g _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1294
    bwtLen: 1295
    sz: 324
    bwtSz: 324
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 81
    offsSz: 324
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 7
    numLines: 7
    ebwtTotLen: 448
    ebwtTotSz: 448
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
0
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 39
    offsSz: 156
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 4
    numLines: 4
    ebwtTotLen: 256
    ebwtTotSz: 256
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:00
