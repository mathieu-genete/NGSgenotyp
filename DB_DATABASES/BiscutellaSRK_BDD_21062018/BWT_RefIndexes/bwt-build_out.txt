Settings:
  Output files: "/gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/BWT_RefIndexes/AhSRK06.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/REF/AhSRK06.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 173
Using parameters --bmax 130 --dcv 1024
  Doing ahead-of-time memory u    Passed  Passed!  Constructing with these parameters: --bmax 242 --dConstrucConstructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 11 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:02
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 85.8571 (target: 113)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 94
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 95
Getting block 2 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 99
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 100
Getting block 3 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 78
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 79
Getting block 4 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 71
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 72
Getting block 5 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 56
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 57
Getting block 6 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 110
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 111
Getting block 7 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 93
  (Using difference cover)
  Sorting block time: Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194662 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/BWT_RefIndexes/A01a.1.bt2
Wrote 148 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/BWT_RefIndexes/A01a.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 567
    bwtLen: 568
    sz: 142
    bwtSz: 142
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 36
    offsSz: 144
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:10
Reading reference sizes  Passed!  Constructing with these parameters: --bmax 106 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reservin  Passed!  Constructing with these parameters: --bmax 114 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 85.8571 (target: 113)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 33
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 34
Getting block 2 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 113
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 114
Getting block 3 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 112
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 113
Getting block 4 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 90
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 91
Getting block 5 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 87
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 88
Getting block 6 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 99
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 100
Getting block 7 of 7
  Reserving size (114) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 67
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 68
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 168
fchr[G]: 282
fchr[T]: 451
fchr[$]: 607
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194729 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/BWT_RefIndexes/AhSRK07.rev.1.bt2
Wrote 156 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/BWT_RefIndexes/AhSRK07.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 607
    bwtLen: 608
    sz: 152
    bwtSz: 152
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 38
    offsSz: 152
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 4
    numLines: 4
    ebwtTotLen: 256
    ebwtTotSz: 256
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
te 148 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/BiscutellaSRK_BDD_21062018/BWT_RefIndexes/A01a.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 567
    bwtLen: 568
    sz: 142
    bwtSz: 142
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 36
    offsSz: 144
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
e for backward call to driver() for mirror index: 00:00:01
fsLen: 35
    offsSz: 140
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:02
 time for backward call to driver() for mirror index: 00:00:02
kward call to driver() for mirror index: 00:00:08
ror index: 00:00:04
put streams
Returning from Ebwt constructor
Headers:
    len: 1669
    bwtLen: 1670
    sz: 418
    bwtSz: 418
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 105
    offsSz: 420
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 9
    numLines: 9
    ebwtTotLen: 576
    ebwtTotSz: 576
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:08
: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 82
    offsSz: 328
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 7
    numLines: 7
    ebwtTotLen: 448
    ebwtTotSz: 448
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:03
