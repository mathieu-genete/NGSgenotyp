Settings:
  Output files: "/gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AhSCR12.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/REF/AhSCR12.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 61
Using parameters --bmax 46 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 48 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 11 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:01
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 30.625 (target: 47)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 31
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 32
Getting block 2 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 30
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 31
Getting block 3 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 30
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 31
Getting block 4 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 22
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23
Getting block 5 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 25
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26
Getting block 6 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 31
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 32
Getting block 7 of 8
  Reserving size (48) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194601 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AhSCR12.1.bt2
Wrote 68 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AhSCR12.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 246
    bwtLen: 247
    sz:Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194601 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DExiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194601 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AlSCR38.1.bt2
Wrote 68 bytes to secondary EExiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194601 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AlSCR14.1.bt2
Wrote 68 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AlSCR14.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 252
    bw  Passed!  Constructing with these parameters: --bmax 46 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time:  Passed!  Constructing with these parameters: --bmax 49 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time:  Passed!  Constructing with these parameters: --bmax 49 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 11 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 5; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 36.4286 (target: 48)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 46
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 47
Getting block 2 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 25
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26
Getting block 3 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 45
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 46
Getting block 4 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 48
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 49
Getting block 5 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 28
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 29
Getting block 6 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 42
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 43
Getting block 7 of 7
  Reserving size (49) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 21
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 22
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 80
fchr[G]: 120
fchr[T]: 179
fchr[$]: 261
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194601 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AhSCR20.rev.1.bt2
Wrote 72 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/SCR_CDSCodonAligned_17072018/BWT_RefIndexes/AhSCR20.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 261
    bwtLen: 262
    sz: 66
    bwtSz: 66
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 17
    offsSz: 68
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 2
    numLines: 2
    ebwtTotLen: 128
    ebwtTotSz: 128
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
Len: 16
    offsSz: 64
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 2
    numLines: 2
    ebwtTotLen: 128
    ebwtTotSz: 128
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:02
1
    bwtSz: 62
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 16
    offsSz: 64
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 2
    numLines: 2
    ebwtTotLen: 128
    ebwtTotSz: 128
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
Len: 15
    offsSz: 60
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 2
    numLines: 2
    ebwtTotLen: 128
    ebwtTotSz: 128
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
