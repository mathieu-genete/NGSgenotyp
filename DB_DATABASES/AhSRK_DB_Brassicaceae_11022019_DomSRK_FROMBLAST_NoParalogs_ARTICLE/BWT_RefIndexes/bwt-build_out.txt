Settings:
  Output files: "/gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK07_EU075129_1.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/REF/AhSRK07_EU075129_1.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 151
Using parameters --bmax 114 --dcv 1024
  Doing ahead-of-time memory usage test   Passed!  Constructing with these parameters: --bmax 248 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:01
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 79 (target: 104)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 91
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 92
Getting block 2 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 51
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 52
Getting block 3 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 69
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 70
Getting block 4 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 60
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 61
Getting block 5 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 100
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 101
Getting block 6 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 104
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 105
Getting block 7 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 78
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 79
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 161
fchr[G]: 260
fchr[T]: 407
fchr[$]: 559
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194676 bytes to primary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK0Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194740 bytes to primary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK31_AF328998_2.1.bt2
Wrote 184 bytes to secondary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK31_AF328998_2.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 714
    bwtLen: 715
    sz: 179
    bwtSz: 179
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 45
    offsSz: 180
    lineSz: 64
    sideSz: 64
    sideBExiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194676 bytes to primary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK18_KJ772418_1.1.bt2
Wrote 148 bytes to secondary EBWT file: /gepv/home2/mathieu/tools/NGSgen  Passed!  Constructing with these parameters: --bmax 105 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 8; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 0; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 79 (target: 104)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 75
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 76
Getting block 2 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 48
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 49
Getting block 3 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 76
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 77
Getting block 4 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 67
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 68
Getting block 5 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 91
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 92
Getting block 6 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 97
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 98
Getting block 7 of 7
  Reserving size (105) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 99
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 100
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 161
fchr[G]: 260
fchr[T]: 407
fchr[$]: 559
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194676 bytes to primary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK02_AY186772_1.rev.1.bt2
Wrote 144 bytes to secondary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK02_AY186772_1.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 559
    bwtLen: 560
    sz: 140
    bwtSz: 140
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 35
    offsSz: 140
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:05

fchr[G]: 272
fchr[T]: 425
fchr[$]: 570
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194676 bytes to primary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK18_KJ772418_1.rev.1.bt2
Wrote 148 bytes to secondary EBWT file: /gepv/home2/mathieu/tools/NGSgenotyp/DB_DATABASES/AhSRK_DB_Brassicaceae_11022019_DomSRK_FROMBLAST_NoParalogs_ARTICLE/BWT_RefIndexes/AhSRK18_KJ772418_1.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 570
    bwtLen: 571
    sz: 143
    bwtSz: 143
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 36
    offsSz: 144
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:05
24
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 81
    offsSz: 324
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 7
    numLines: 7
    ebwtTotLen: 448
    ebwtTotSz: 448
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:07
