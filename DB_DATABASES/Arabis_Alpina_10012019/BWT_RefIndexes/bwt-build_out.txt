Settings:
  Output files: "/gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK1.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/REF/ALPSRK1.fasta
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 234
Using parameters --bmax 176 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 174 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 132 (target: 173)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 173
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 174
Getting block 2 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 92
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 93
Getting block 3 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 127
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 128
Getting block 4 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 162
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 163
Getting block 5 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 141
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 142
Getting block 6 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 170
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 171
Getting block 7 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 59
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 60
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 276
fchr[G]: 456
fchr[T]: 691
fchr[$]: 930
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194817 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK2.1.bt2
Wrote 240 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK2.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 930
    bwtLen: 931
    sz: 233
    bwtSz: 233
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 59
    offsSz: 236
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 5
    numLines: 5
    ebwtTotLen: 320
    ebwtTotSz: 320
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:01
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 232
Using parameters --bmax 174 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 174 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 7; iterating...
  Binary sorting into buckets
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Binary sorting into buckets time: 00:00:00
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 132 (target: 173)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 148
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 149
Getting block 2 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 149
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 150
Getting block 3 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 155
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 156
Getting block 4 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 120
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 121
Getting block 5 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 114
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 115
Getting block 6 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 94
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 95
Getting block 7 of 7
  Reserving size (174) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 144
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 145
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 276
fchr[G]: 456
fchr[T]: 691
fchr[$]: 930
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194817 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK2.rev.1.bt2
Wrote 240 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK2.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 930
    bwtLen: 931
    sz: 233
    bwtSz: 233
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 59
    offsSz: 236
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 5
    numLines: 5
    ebwtTotLen: 320
    ebwtTotSz: 320
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
   sz: 137
    bwtSz: 137
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 35
    offsSz: 140
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3
    numLines: 3
    ebwtTotLen: 192
    ebwtTotSz: 192
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:00
numSides: 5
    numLines: 5
    ebwtTotLen: 320
    ebwtTotSz: 320
    color: 0
    reExiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194793 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK6.rev.1.bt2
Wrote 244 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK6.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 950
    bwtLen: 951
    sz: 238
    bwtSz: 238
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 60
    offsSz: 240
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 5
    numLines: 5
    ebwtTotLen: 320
    ebwtTotSz: 320
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:00
r loop time: 00:00:00
  Sorting block of length 35
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 36
Getting block 9 of 9
  Reserving size (123) for bucket
  Calculating Z arrays
  Calculating Z arrays time: 00:00:00
  Entering block accumulator loop:
  10%
  20%
  30%
  40%
  50%
  60%
  70%
  80%
  90%
  100%
  Block accumulator loop time: 00:00:00
  Sorting block of length 93
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 94
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 183
fchr[G]: 320
fchr[T]: 500
fchr[$]: 659
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4194729 bytes to primary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK4.rev.1.bt2
Wrote 172 bytes to secondary EBWT file: /gepv/home2/tools/NGSgenotyp/DB_DATABASES/Arabis_Alpina_10012019/BWT_RefIndexes/ALPSRK4.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 659
    bwtLen: 660
    sz: 165
    bwtSz: 165
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 42
    offsSz: 168
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 4
    numLines: 4
    ebwtTotLen: 256
    ebwtTotSz: 256
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:00
